# fish are vertebrate, so merging those groups
ResultsMicrobiome$HostType <- ResultsMicrobiome$HostType %>% str_replace_all(c("fish" = "vertebrate"))
# make a list with types of core to loop over
coreTypes <- c("Common", "Temporal", "Host-adapted", "Functional", "Ecological")
FOS <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$FieldOfStudy) %>% chisq.test()
HT <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$HostType) %>% chisq.test()
PNI <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$PositiveOrNegativeInteraction) %>% chisq.test()
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>% chisq.test()
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>% chisq.test()
EHF
FOS <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$FieldOfStudy) %>% chisq.test()
FOS
HT <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$HostType) %>% chisq.test()
HT
PNI <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$PositiveOrNegativeInteraction) %>% chisq.test()
PNI
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>% chisq.test()
EHF
pval <- c((FOS, function(x) x$p.value),
View(FOS)
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
p.adjust(pval, method = "holm")
# combined core
ResultsMicrobiome$CombinedCore <- factor(ResultsMicrobiome$CombinedCore,
levels = c("Common Only",
"Ecological (with or without Common)",
"Functional (with or without Common)",
"Host-adapted (with or without Common)",
"Temporal (All Combinations)",
"None"))
# field of study
ResultsMicrobiome$FieldOfStudy <- factor(ResultsMicrobiome$FieldOfStudy,
levels = c("Ecology", "Medical",
"Agricultural", "Industrial"))
# host types
table(ResultsMicrobiome$HostType)
ResultsMicrobiome$HostType <- factor(ResultsMicrobiome$HostType,
levels = c("vertebrate", "human", "invertebrate", "plant",
"food products", "soil", "sludge",  "water"))
# positive/negative
table(ResultsMicrobiome$PositiveOrNegativeInteraction)
ResultsMicrobiome$PositiveOrNegativeInteraction <- factor(ResultsMicrobiome$PositiveOrNegativeInteraction,
levels = c("both", "positive", "negative"))
# host fitness
table(ResultsMicrobiome$EffectOnHostFitness)
ResultsMicrobiome$EffectOnHostFitness <- factor(ResultsMicrobiome$EffectOnHostFitness,
levels = c("both", "positive", "negative"))
# figure foundation
f <- ggplot(ResultsMicrobiome) +
scale_fill_viridis_d() +
labs(fill = "Combined Core", y = "Combined Core")
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
#pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
#dev.off()
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
# positive or negative interaction x core microbiome
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type")
# effect on host fitness x core microbiome
f + geom_mosaic(aes(x = product(EffectOnHostFitness),
fill = CombinedCore)) +
xlab("Effect on Host Fitness")
#set working directory and bring in the Excel Sheet
#setwd("~/University/University 2020-2021/thesis/MicrobiomeThesis")
library(readxl)
library(tidyverse)
library(ggmosaic)
# set plotting theme
theme_set(theme_bw())
#~/University/University 2020-2021/thesis/MicrobiomeThesis/
# read in spreadsheets
ResultsMicrobiome <- read_excel("micro.xlsx")
# replace NAs with no
ResultsMicrobiome$NestedCore[is.na(ResultsMicrobiome$NestedCore)] <- "no"
# combine cores
ResultsMicrobiome$CombinedCore <- interaction(ResultsMicrobiome$NestedCore,
ResultsMicrobiome$CommonCore,
ResultsMicrobiome$TemporalCore) %>%
str_replace_all(c("ecological.no.no" = "Ecological (with or without Common)",
"functional.no.no" = "Functional (with or without Common)",
"host-adapted.no.no" = "Host-adapted (with or without Common)",
"ecological.yes.no" = "Ecological (with or without Common)",
"functional.yes.no" = "Functional (with or without Common)",
"host-adapted.yes.no" = "Host-adapted (with or without Common)",
"no.yes.no" = "Common Only", "no.no.yes" = "Temporal (All Combinations)",
"ecological.yes.yes" = "Temporal (All Combinations)",
"functional.yes.yes" = "Temporal (All Combinations)",
"no.no.no" = "None", "no.yes.yes" = "Temporal (All Combinations)",
"host-adapted.yes.yes" = "Temporal (All Combinations)"))
# fish are vertebrate, so merging those groups
ResultsMicrobiome$HostType <- ResultsMicrobiome$HostType %>% str_replace_all(c("fish" = "vertebrate"))
# make a list with types of core to loop over
coreTypes <- c("Common", "Temporal", "Host-adapted", "Functional", "Ecological")
FOS <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$FieldOfStudy) %>% chisq.test()
FOS
HT <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$HostType) %>% chisq.test()
HT
PNI <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$PositiveOrNegativeInteraction) %>% chisq.test()
PNI
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>%
as.data.frame() %>% # converting to a data frame
pivot_wider(names_from = Var2, values_from = Freq) %>% column_to_rownames("Var1") %>%
# dropping zero 0 rows to run the chisquare test
.[ rowSums(.)!=0, ] %>% chisq.test()
EHF
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
p.adjust(pval, method = "holm")
# combined core
ResultsMicrobiome$CombinedCore <- factor(ResultsMicrobiome$CombinedCore,
levels = c("Common Only",
"Ecological (with or without Common)",
"Functional (with or without Common)",
"Host-adapted (with or without Common)",
"Temporal (All Combinations)",
"None"))
# field of study
ResultsMicrobiome$FieldOfStudy <- factor(ResultsMicrobiome$FieldOfStudy,
levels = c("Ecology", "Medical",
"Agricultural", "Industrial"))
# host types
table(ResultsMicrobiome$HostType)
ResultsMicrobiome$HostType <- factor(ResultsMicrobiome$HostType,
levels = c("vertebrate", "human", "invertebrate", "plant",
"food products", "soil", "sludge",  "water"))
# positive/negative
table(ResultsMicrobiome$PositiveOrNegativeInteraction)
ResultsMicrobiome$PositiveOrNegativeInteraction <- factor(ResultsMicrobiome$PositiveOrNegativeInteraction,
levels = c("both", "positive", "negative"))
# host fitness
table(ResultsMicrobiome$EffectOnHostFitness)
ResultsMicrobiome$EffectOnHostFitness <- factor(ResultsMicrobiome$EffectOnHostFitness,
levels = c("both", "positive", "negative"))
# figure foundation
f <- ggplot(ResultsMicrobiome) +
scale_fill_viridis_d() +
labs(fill = "Combined Core", y = "Combined Core")
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
#pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
#dev.off()
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
# positive or negative interaction x core microbiome
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type")
# effect on host fitness x core microbiome
f + geom_mosaic(aes(x = product(EffectOnHostFitness),
fill = CombinedCore)) +
xlab("Effect on Host Fitness")
```{r}
pval
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
pval
p.adjust(pval, method = "holm")
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
#first row is unadjusted pvalues
pval
#second row is Bonferroni-Holm adjusted pvalues
p.adjust(pval, method = "holm")
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>%
as.data.frame() %>% # converting to a data frame
pivot_wider(names_from = Var2, values_from = Freq) %>% column_to_rownames("Var1") %>%
# dropping zero 0 rows to run the chisquare test
.[ rowSums(.)!=0, ] %>% chisq.test()
EHF
corePlot <- ggplot(micro, aes(x = NestedCore, # possible to do intersection here instead
fill = interaction(CommonCore, TemporalCore))) +
geom_bar() +
# changing the x axis tick labels
# discrete b/c the levels are unique (not on a continuous scale)
scale_x_discrete(labels = c("Ecological", "Functional", "Host-adapted", "None")) +
# changing the interaction legend
# also adds viridis color scheme (d for discrete as above)
scale_fill_viridis_d(labels = c("Neither", "Common Only", "Temporal Only", "Both")) +
# adjust axis and legend names
labs(x = "Nested Core Definition", y = "Number of Articles",
fill = "Common or Temporal")
library(readxl)
library(tidyverse)
library(ggplot2)
setwd("~/University/University 2020-2021/thesis/MicrobiomeThesis")
theme_set(theme_minimal())
micro <- read_excel("micro.xlsx")
View(micro)
fieldPlot<- ggplot(data=micro, aes(x=FieldOfStudy)) +
geom_bar(fill="steelblue") +
labs(x = "Field of Study", y = "Number of Articles")
fieldPlot
corePlot <- ggplot(micro, aes(x = NestedCore, # possible to do intersection here instead
fill = interaction(CommonCore, TemporalCore))) +
geom_bar() +
# changing the x axis tick labels
# discrete b/c the levels are unique (not on a continuous scale)
scale_x_discrete(labels = c("Ecological", "Functional", "Host-adapted", "None")) +
# changing the interaction legend
# also adds viridis color scheme (d for discrete as above)
scale_fill_viridis_d(labels = c("Neither", "Common Only", "Temporal Only", "Both")) +
# adjust axis and legend names
labs(x = "Nested Core Definition", y = "Number of Articles",
fill = "Common or Temporal")
corePlot
View(corePlot)
corePlot
#set working directory and bring in the Excel Sheet
#setwd("~/University/University 2020-2021/thesis/MicrobiomeThesis")
library(readxl)
library(tidyverse)
library(ggmosaic)
# set plotting theme
theme_set(theme_bw())
#~/University/University 2020-2021/thesis/MicrobiomeThesis/
# read in spreadsheets
ResultsMicrobiome <- read_excel("micro.xlsx")
# replace NAs with no
ResultsMicrobiome$NestedCore[is.na(ResultsMicrobiome$NestedCore)] <- "no"
# combine cores
ResultsMicrobiome$CombinedCore <- interaction(ResultsMicrobiome$NestedCore,
ResultsMicrobiome$CommonCore,
ResultsMicrobiome$TemporalCore) %>%
str_replace_all(c("ecological.no.no" = "Ecological (with or without Common)",
"functional.no.no" = "Functional (with or without Common)",
"host-adapted.no.no" = "Host-adapted (with or without Common)",
"ecological.yes.no" = "Ecological (with or without Common)",
"functional.yes.no" = "Functional (with or without Common)",
"host-adapted.yes.no" = "Host-adapted (with or without Common)",
"no.yes.no" = "Common Only", "no.no.yes" = "Temporal (All Combinations)",
"ecological.yes.yes" = "Temporal (All Combinations)",
"functional.yes.yes" = "Temporal (All Combinations)",
"no.no.no" = "None", "no.yes.yes" = "Temporal (All Combinations)",
"host-adapted.yes.yes" = "Temporal (All Combinations)"))
# fish are vertebrate, so merging those groups
ResultsMicrobiome$HostType <- ResultsMicrobiome$HostType %>% str_replace_all(c("fish" = "vertebrate"))
# make a list with types of core to loop over
coreTypes <- c("Common", "Temporal", "Host-adapted", "Functional", "Ecological")
FOS <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$FieldOfStudy) %>% chisq.test()
FOS
HT <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$HostType) %>% chisq.test()
HT
PNI <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$PositiveOrNegativeInteraction) %>% chisq.test()
PNI
EHF <- table(ResultsMicrobiome$CombinedCore, ResultsMicrobiome$EffectOnHostFitness) %>%
as.data.frame() %>% # converting to a data frame
pivot_wider(names_from = Var2, values_from = Freq) %>% column_to_rownames("Var1") %>%
# dropping zero 0 rows to run the chisquare test
.[ rowSums(.)!=0, ] %>% chisq.test()
EHF
pval <- c((FOS[["p.value"]]),
(HT[["p.value"]]),
(PNI[["p.value"]]),
(EHF[["p.value"]])) %>% unlist
#first row is unadjusted pvalues
pval
#second row is Bonferroni-Holm adjusted pvalues
p.adjust(pval, method = "holm")
# combined core
ResultsMicrobiome$CombinedCore <- factor(ResultsMicrobiome$CombinedCore,
levels = c("Common Only",
"Ecological (with or without Common)",
"Functional (with or without Common)",
"Host-adapted (with or without Common)",
"Temporal (All Combinations)",
"None"))
# field of study
ResultsMicrobiome$FieldOfStudy <- factor(ResultsMicrobiome$FieldOfStudy,
levels = c("Ecology", "Medical",
"Agricultural", "Industrial"))
# host types
table(ResultsMicrobiome$HostType)
ResultsMicrobiome$HostType <- factor(ResultsMicrobiome$HostType,
levels = c("vertebrate", "human", "invertebrate", "plant",
"food products", "soil", "sludge",  "water"))
# positive/negative
table(ResultsMicrobiome$PositiveOrNegativeInteraction)
ResultsMicrobiome$PositiveOrNegativeInteraction <- factor(ResultsMicrobiome$PositiveOrNegativeInteraction,
levels = c("both", "positive", "negative"))
# host fitness
table(ResultsMicrobiome$EffectOnHostFitness)
ResultsMicrobiome$EffectOnHostFitness <- factor(ResultsMicrobiome$EffectOnHostFitness,
levels = c("both", "positive", "negative"))
# figure foundation
f <- ggplot(ResultsMicrobiome) +
scale_fill_viridis_d() +
labs(fill = "Combined Core", y = "Combined Core")
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
#pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
#dev.off()
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
print
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
#pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
#dev.off()
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
# positive or negative interaction x core microbiome
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type")
# effect on host fitness x core microbiome
f + geom_mosaic(aes(x = product(EffectOnHostFitness),
fill = CombinedCore)) +
xlab("Effect on Host Fitness")
# study system x core microbiome
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System")
# positive or negative interaction x core microbiome
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type")
# effect on host fitness x core microbiome
f + geom_mosaic(aes(x = product(EffectOnHostFitness),
fill = CombinedCore)) +
xlab("Effect on Host Fitness")
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
#pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
#dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 12, width = 10)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 12, width = 20)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme( axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic") )
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme( axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic") ) +
theme(axis.ticks.y = NULL)
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme( axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic") ) +
theme(axis.text.y = element_blank())
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic"), axis.text.y = element_blank(), legend.position = (top))
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic"), axis.text.y = element_blank(), legend.position = "top")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic"), legend.position = NULL)
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold.italic"), legend.position = "none")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.text.x = element_text(size = 14, face = "bold"), axis.text.y = element_text(size = 14, face = "bold.italic"), legend.position = "none")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 14, face = "bold"), axis.title.y = element_text(size = 14, face = "bold"), legend.position = "none")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 12), legend.position = "none")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 12), legend.position = "none")
dev.off()
# field of study x core microbiome
# un-comment pdf and dev.off to export with unsquished labels
pdf("FieldOfStudy.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(FieldOfStudy),
fill = CombinedCore)) +
xlab("Field of Study") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12, face = "italic"), axis.text.x = element_text(size = 12, face = "italic"), legend.position = "none")
dev.off()
# study system x core microbiome
pdf("StudySystem.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(HostType),
fill = CombinedCore)) +
xlab("Study System") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12, face = "italic"), axis.text.x = element_text(size = 12, face = "italic"), legend.position = "none")
dev.off()
# positive or negative interaction x core microbiome
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12, face = "italic"), axis.text.x = element_text(size = 12, face = "italic"), legend.position = "none")
dev.off()
# positive or negative interaction x core microbiome
pdf("InteractionType.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(PositiveOrNegativeInteraction),
fill = CombinedCore)) +
xlab("Interaction Type") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12, face = "italic"), axis.text.x = element_text(size = 12, face = "italic"), legend.position = "none")
dev.off()
# effect on host fitness x core microbiome
pdf("EffectHostFitness.pdf", height = 10, width = 15)
f + geom_mosaic(aes(x = product(EffectOnHostFitness),
fill = CombinedCore)) +
xlab("Effect on Host Fitness") +
theme(axis.title.x = element_text(size = 16, face = "bold"), axis.title.y = element_text(size = 16, face = "bold"), axis.text.y = element_text(size = 12, face = "italic"), axis.text.x = element_text(size = 12, face = "italic"), legend.position = "none")
dev.off()
